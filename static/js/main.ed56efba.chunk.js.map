{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","console","log","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEe,SAASA,EAAT,GAA8D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SAS7D,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACI,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAMC,IAAK,eAC5C,qBACAF,UAAU,OACVC,IAAI,iBACJE,QAdQ,WACZJ,GACAF,EAAaD,IAaTM,IAAI,mBCfpB,IAAME,EAAa,CACjB,CAAC,IAAO,oBAAqBC,SAAS,GACtC,CAAC,IAAO,oBAAqBA,SAAS,GACtC,CAAC,IAAO,kBAAmBA,SAAS,GACpC,CAAC,IAAO,oBAAqBA,SAAS,GACtC,CAAC,IAAO,oBAAqBA,SAAS,GACtC,CAAC,IAAO,mBAAoBA,SAAS,IA0FxBC,MAvFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAIMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAcA,GAAf,IAAqB2B,GAAIH,KAAKC,cAEnCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAKPd,EAAc,SAACD,GACnBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIhD4B,qBAAU,WAEHZ,GAAaE,IACdE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC7BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAGA,EAAKK,MAAQW,EAAUX,IACjB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,QAIb8B,KAEAC,YAAW,kBAAMD,MAAY,QAIpC,CAACd,EAAWE,IACdc,QAAQC,IAAIrB,GAEZ,IAAMkB,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAmB,GAAS,OAAIA,EAAU,KAChCd,GAAY,IAUd,OALAQ,qBAAU,WACRP,MACA,IAIA,sBAAKjB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAAWc,EAAnB,sBACA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAD,CAEAA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,SASd,wCAAWb,SCxFjBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ed56efba.chunk.js","sourcesContent":["import './SingleCard.css'\r\n\r\nexport default function SingleCard({card, handleChoice, flipped, disabled}) {\r\n\r\n    const handleClick = () =>{\r\n        if(!disabled){\r\n            handleChoice(card)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"card\"> \r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n                <img className=\"front\" src={card.src}  alt =\"card front\" />\r\n                <img \r\n                className=\"back\" \r\n                src=\"/img/cover.png\" \r\n                onClick={handleClick} \r\n                alt=\"card back\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n  {\"src\": \"/img/helmet-1.png\", matched: false},\n  {\"src\": \"/img/potion-1.png\", matched: false},\n  {\"src\": \"/img/ring-1.png\", matched: false},\n  {\"src\": \"/img/scroll-1.png\", matched: false},\n  {\"src\": \"/img/shield-1.png\", matched: false},\n  {\"src\": \"/img/sword-1.png\", matched: false}\n]\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n\n  //shuffle cards --izmesa karte -promen im mesta\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5 )\n      .map((card) => ({...card, id: Math.random()}))\n\n      setChoiceOne(null);\n      setChoiceTwo(null);\n      setCards(shuffledCards);\n      setTurns(0);\n\n  }\n  //handle a coice\n\n  const handleChoice= (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  //compare 2 selected cards\n  useEffect(() => {\n      \n      if(choiceOne && choiceTwo){\n        setDisabled(true);\n         if(choiceOne.src === choiceTwo.src){\n           setCards(prevCards => {\n             return prevCards.map(card => {\n               if(card.src === choiceOne.src){\n                 return {...card, matched: true}\n               } else {\n                 return card \n               }\n             })\n           })\n           resetTurn()\n         }else {\n           setTimeout(() => resetTurn(),1000)\n           \n         }\n      }\n  },[choiceOne, choiceTwo])\n  console.log(cards);\n  //reset choices and increse turn\n  const resetTurn = () =>{\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns+1)\n    setDisabled(false)\n  }\n\n  //start a new game autmatically\n\n  useEffect(()=> {\n    shuffleCards()\n  },[])\n\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick = {shuffleCards}>New Game</button>\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard \n          key={card.id} \n          card={card}\n          handleChoice={handleChoice}\n          flipped={card === choiceOne || card === choiceTwo || card.matched}\n          disabled={disabled}\n          />\n          ))\n        }\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}